# For more information on the content of this file,
# the developer documentation and the PyPA packaging documentation
# * https://packaging.python.org/en/latest/specifications/declaring-project-metadata/#declaring-project-metadata
# * The setuptools and setuptools_scm documentation for the respective sections
[build-system]
requires = ["setuptools>=65", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
# this is the name of the project / the python distribution package.
# In most cases, it should be identical to the name of the main python package inside it.
# this will be the name e.g. used for `pip install` and it must be globally unique to be
# able to upload the package distribution to PyPI.
name = "python-project-template"

description = "Template for a pure python package"
readme = "README.md"
license = {text = "BSD-3-Clause"}
authors = [
    {name = "Maximilian Linhoff", email = "maximilian.linhoff@tu-dortmund.de"},
]

requires-python = ">=3.8"
dependencies = [
    "numpy",
]

# needed for setuptools_scm, we don't define a static version
dynamic = ["version"]

[project.urls]
repository = "https://github.com/cta-observatory/project-template-python-pure"

[project.scripts]
fibonacci = "template.cli.fib:main"

[tool.setuptools.packages.find]
where = ["src"]
exclude = ["template._dev_version"]

[project.optional-dependencies]
test = [
  "pytest",
  "pytest-cov",
]
doc = [
  "sphinx",
  "numpydoc",
  "pydata-sphinx-theme",
]
dev = [
  "setuptools_scm",
]

# we can use self-references to simplify all
all = [
  "project-template-python-pure[test,doc,dev]",
]

[tool.setuptools_scm]
write_to = 'src/template/_version.py'
